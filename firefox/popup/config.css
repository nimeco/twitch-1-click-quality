@import "base.css";

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    margin: 0;
    background-color: var(--color-hinted-grey-2);
    padding: 6px;
    color: var(--color-text-base);
    border: 3px solid var(--color-twitch-purple-12);
    border-radius: 9px;
    width: 330px;
    height: 600px;
    font: var(--font-size-base) 'Inter', Arial, sans-serif;
    overflow: hidden;
    display: flex;
    justify-content: space-between;
    flex-direction: column;
}

.purple {
    color: var(--color-text-brand);
}
.wrapper {
    display: grid;
    --row-height: 32;
    grid-template:
        "tip-quality           label-quality           opt-quality ." calc(var(--row-height) * 1px)
        "tip-mute-on-lowest    label-mute-on-lowest    opt-mute-on-lowest ." calc(var(--row-height) * 1px)
        "tip-unmute-on-highest label-unmute-on-highest opt-unmute-on-highest ." calc(var(--row-height) * 1px)
        ".                     label-volume            opt-volume ." calc(var(--row-height) * 1px)
        ".                     label-margin            opt-margin ." calc(var(--row-height) * 1px)
        ".                     label-scale             opt-scale ." calc(var(--row-height) * 1px)
        ".                     label-transition        opt-transition ." calc(var(--row-height) * 1px)
        ".                     label-language          opt-language ." calc(var(--row-height) * 1px)
        "tip-color-text        label-color-text        opt-color-text ." calc(var(--row-height) * 1px)
        "tip-color-back        label-color-back        opt-color-back ." calc(var(--row-height) * 1px)
        "tip-color-text-hover  label-color-text-hover  opt-color-text-hover ." calc(var(--row-height) * 1px)
        "tip-color-back-hover  label-color-back-hover  opt-color-back-hover ." calc(var(--row-height) * 1px)
        "tip-color-text-select label-color-text-select opt-color-text-select ." calc(var(--row-height) * 1px)
        "tip-color-back-select label-color-back-select opt-color-back-select ." calc(var(--row-height) * 1px)
        ".                     reset-button            reset-button ." calc(var(--row-height) * 1px + 10px) / 17px 6fr 3fr 17px;
    grid-gap: 2px 2px;
    align-items: center;
    user-select: none;
}
.wrapper [id$='-tooltip'] {
    height: 1.4rem;
}
#option-quality-tooltip { grid-area: tip-quality; }
#option-quality-label { grid-area: label-quality; }
#option-quality-save { grid-area: opt-quality; }

#option-mute-on-lowest-tooltip { grid-area: tip-mute-on-lowest; }
#option-mute-on-lowest-label { grid-area: label-mute-on-lowest; }
#option-mute-on-lowest { grid-area: opt-mute-on-lowest; }

#option-unmute-on-highest-tooltip { grid-area: tip-unmute-on-highest; }
#option-unmute-on-highest-label { grid-area: label-unmute-on-highest; }
#option-unmute-on-highest { grid-area: opt-unmute-on-highest; }

#option-mute-volume-label { grid-area: label-volume; }
#option-mute-volume { grid-area: opt-volume; }

#option-margin-label { grid-area: label-margin; }
#option-button-margin { grid-area: opt-margin; }

#option-scale-label { grid-area: label-scale; }
#option-button-scale { grid-area: opt-scale; }

#option-toggle-transition-label { grid-area: label-transition; }
#option-toggle-transition { grid-area: opt-transition; }

#option-language-label { grid-area: label-language; }
#option-language-save { grid-area: opt-language; }

#option-color-text-tooltip { grid-area: tip-color-text; }
#option-color-text-label { grid-area: label-color-text; }
#option-color-text ~ label[for="option-color-text"] { grid-area: opt-color-text; }

#option-color-background-tooltip { grid-area: tip-color-back; }
#option-color-background-label { grid-area: label-color-back; }
#option-color-background ~ label[for="option-color-background"] { grid-area: opt-color-back; }

#option-color-text-hover-tooltip { grid-area: tip-color-text-hover; }
#option-color-text-hover-label { grid-area: label-color-text-hover; }
#option-color-text-hover ~ label[for="option-color-text-hover"] { grid-area: opt-color-text-hover; }

#option-color-background-hover-tooltip { grid-area: tip-color-back-hover; }
#option-color-background-hover-label { grid-area: label-color-back-hover; }
#option-color-background-hover ~ label[for="option-color-background-hover"] { grid-area: opt-color-back-hover; }

#option-color-text-selected-tooltip { grid-area: tip-color-text-select; }
#option-color-text-selected-label { grid-area: label-color-text-select; }
#option-color-text-selected ~ label[for="option-color-text-selected"] { grid-area: opt-color-text-select; }

#option-color-background-selected-tooltip { grid-area: tip-color-back-select; }
#option-color-background-selected-label { grid-area: label-color-back-select; }
#option-color-background-selected ~ label[for="option-color-background-selected"] { grid-area: opt-color-back-select; }

#option-reset {
    align-self: end;
    grid-area: reset-button;
}
.color-tooltip {
    width: 11.2167px;
    height: 11.2167px !important;
    background-color: #FFF;
    border-radius: var(--border-radius-rounded);
    margin-left: 1.5px;
    margin-top: 1.25px;
}
div[id$="-tooltip"] > span.color-tooltip:hover::after {
    width: 96px;
    display: flex !important;
    justify-content: center;
}

.saturation,
.brightness,
.color-picker,
.color-slider,
#option-color-text,
#option-color-background,
#option-color-text-hover,
#option-color-background-hover,
#option-color-text-selected,
#option-color-background-selected {
    --picker-height: 300px;
    --picker-width: 300px;
}

.title {
    font-size: 2.4rem;
    text-align: center;
    margin-top: 5px;
    white-space: nowrap;
    font-weight: bold;
    z-index: 3;
}

div[id$='-tooltip'] > span {
    /* font-size: var(--button-text-x-small); */
    /* margin-right: 5px; */
    /* vertical-align: middle; */
    position: absolute;
    display: inline-block;
    height: 14px;
}
div[id$='-tooltip'] > span:hover {
    cursor: pointer;
}
div[id$='-tooltip'] > span:hover:after {
    opacity: 1;
    display: inline;
}
div[id$='-tooltip'] > span:after {
    content: attr(data-description);
    opacity: 0;
    display: none;
    color: var(--color-text-base);
    font-size: var(--button-text-xx-small);
    font-weight: var(--font-weight-normal);
    transition: all 0.2s ease;
    position: absolute;
    width: 204px;
    background: var(--color-background-button-primary-hover);
    z-index: var(--z-index-above);
    padding: 8px;
    border-radius: 5px;
    line-height: 1;
    font-size: 17px;
    left: 1.9rem;
    top: -1.2rem;
}

.svg-info:hover {
    fill: var(--color-background-button-primary-hover);
}
.svg-info {
    fill: var(--color-fill-brand);
    width: 14px;
    height: 14px;
}
.svg-definition {
    width: 0;
    height: 0;
    position: absolute;
}

.footer {
    display: flex;
    justify-content: center;
    margin-bottom: 5px;
    z-index: 500;
}
.link {
    color: var(--color-text-brand);
    text-decoration: none;
    position: relative;
    overflow: hidden;
}
.link:hover {
    color: var(--color-text-link-hover);
}
.link:focus {
    color: var(--color-text-link-focus);
}
.link:active {
    color: var(--color-text-link-active);
}
.link:not(:first-child) {
    margin-left: 1rem;
}
.link-donate::before {
    width: 200%;
    height: 1px;
    left: 0;
    position: absolute;
    content: "";
    bottom: 0;
    background-image: linear-gradient(90deg, #ffd33d 0%, #ea4aaa 12.5%, #b34bff 25%, #00c9ca 37.5%, #ffd33d 50%, #ea4aaa 62.5%, #b34bff 75%, #00c9ca 87.5%, #ffd33d 100%);
}
.link-donate:hover::before {
    animation: animate-bg 3s linear infinite;
}
@keyframes animate-bg {
    0% {
        transform: translate3d(0, 0, 0);
    }
    100% {
        transform: translate3d(-50%, 0, 0);
    }
}

.button {
    display: inline-flex;
    position: relative;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    text-decoration: none;
    white-space: nowrap;
    font-weight: var(--font-weight-semibold);
    border-radius: var(--border-radius-medium);
    font-size: var(--button-text-default);
    height: var(--button-size-default);
    background-color: var(--color-background-button-primary-default);
    color: var(--color-text-button-primary);
    padding: 0px var(--button-padding-x);
    cursor: pointer;
}
.button:disabled,
.button:hover:disabled {
    background-color: var(--color-background-button-disabled);
    color: var(--color-text-button-disabled);
    cursor: not-allowed;
    opacity: 0.5;
}
.footer .button:not(:first-child) {
    margin-left: 1rem;
}
.button:hover {
    background-color: var(--color-background-button-primary-hover);
    color: var(--color-text-button-primary);
}
.button:active {
    background-color: var(--color-background-button-primary-active);
}
.button[data-selected='1'] {
    background-color: var(--color-twitch-purple-7);
}
.reset-button {
    font-weight: var(--font-weight-normal);
    height: var(--button-size-small);
    cursor: pointer;
}
button {
    background: none;
    border: none;
}

.input-toggle {
    display: flex;
    position: relative;
    flex-direction: column;
    line-height: 2rem;
}
input[type='checkbox'] {
    display: none;
}
input[type='checkbox']:checked + .input-toggle-label {
    border-color: var(--color-border-toggle-checked);
    background-color: var(--color-background-toggle-checked);
}
.input-toggle-label {
    display: inline-block;
    position: relative;
    width: 3.5rem;
    height: 2rem;
    cursor: pointer;
    vertical-align: bottom;
    border: 2px solid;
    border-radius: 1rem;
    transition-property: background-color;
    transition-timing-function: ease;
    transition-duration: var(--timing-short);
    border-color: var(--color-border-toggle);
    background-color: var(--color-background-toggle);
}
.input-toggle-label:hover {
    border-color: var(--color-border-toggle-hover);
}
.input-toggle-label::after {
    --button-size: 1.2rem;
    --button-size-active: 1.7rem;
    content: '';
    display: block;
    position: absolute;
    top: 0.2rem;
    bottom: 0.2rem;
    left: 0.2rem;
    width: var(--button-size);
    height: 1.2rem;
    transition-property: left;
    transition-timing-function: ease;
    transition-duration: var(--timing-short);
    border-radius: var(--border-radius-rounded);
    background-color: var(--color-background-toggle-handle);
}
input[type='checkbox']:checked + .input-toggle-label::before {
    border-width: 0px 0px 2px 2px;
    border-style: solid;
    border-color: var(--color-text-toggle-checked-icon);
    display: block;
    position: absolute;
    top: 0.7rem;
    left: 0.8rem;
    width: 0.7rem;
    height: 0.3rem;
    transform: translate3d(-50%, -50%, 0px) rotate(-45deg);
    content: '';
}
input[type='checkbox']:checked + .input-toggle-label::after {
    content: '';
    left: calc((100% - var(--button-size)) - 0.2rem);
    background-color: var(--color-background-toggle-handle-checked);
}
input[type='checkbox']:checked + .input-toggle-label:active::after {
    width: var(--button-size-active);
    left: calc((100% - var(--button-size-active)) - 0.2rem);
}
input[type='checkbox'] + .input-toggle-label:active::after {
    width: var(--button-size-active);
    transition: width var(--timing-short) ease-out, left var(--timing-short) ease-out;
}



.small-switch {
    position: relative;
    display: inline-block;
    vertical-align: top;
    border-radius: 0.4rem;
    cursor: pointer;
    width: 54px;
    height: 30px;
}
.switch-container * {
    transition: 0.08s ease-out;
}
.switch-input {
    position: absolute;
    transform: translate3d(5px, 5px, 0);
}
.switch-label::before,
.switch-label::after {
    position: absolute;
    top: 50%;
    margin-top: -0.5em;
    line-height: 1;
}
.switch-label::after {
    content: attr(data-on);
    left: 8px;
    color: #fff;
    opacity: 0;
}
.switch-label::before {
    content: attr(data-off);
    right: 8px;
    color: #fff;
}
.switch-label {
    position: relative;
    display: block;
    height: inherit;
    font-size: 10px;
    background: var(--color-hinted-grey-7);
    border-radius: inherit;
}
.switch-input:checked ~ .switch-label::after {
    opacity: 1;
}
.switch-input:checked ~ .switch-label::before {
    opacity: 0;
}
.switch-input:checked ~ .switch-label {
    background: var(--color-background-button-primary-default);
}
.switch-handle::before {
    top: 50%;
    left: 50%;
    position: absolute !important;
    margin: -6px 0 0 -6px;
    width: 12px;
    height: 15px;
    border-radius: 0.2rem;
}
.switch-handle {
    position: absolute !important;
    top: 5px;
    left: 5px;
    width: 20px;
    height: 20px;
    background: #fff;
    border-radius: 0.25rem;
}
.switch-input:checked ~ .switch-handle {
    left: unset;
    right: 5px;
}
.switch-handle:active,
.switch-label:active ~ .switch-handle {
    width: 40px;
}



input[type='range'] {
    appearance: none;
    height: 1.4em;
    background-color: transparent;
    cursor: pointer;
    width: 100%;
    --range: calc(var(--max) - var(--min));
    --ratio: calc((var(--value) - var(--min)) / var(--range));
    --sx: calc(0.5 * 2em + var(--ratio) * (100% - 2em));
}
input[type='range']:focus {
    outline: none;
}

/* webkit */
input[type='range']::-webkit-slider-thumb {
    appearance: none;
    width: 1.35em;
    height: 1.35em;
    border-radius: 1em;
    background: var(--color-twitch-purple-10);
    border: none;
    margin-top: calc(max((1em - 1px - 1px) * 0.5, 0px) - 2em * 0.5);
}
input[type='range']::-webkit-slider-runnable-track {
    height: 0.15em;
    border: none;
    border-radius: var(--border-radius-large);
    box-shadow: none;
    background: linear-gradient(var(--color-twitch-purple-10), var(--color-twitch-purple-10)) 0/var(--sx) 100% no-repeat, var(--color-background-range);
}

/* mozilla */
input[type='range']::-moz-range-thumb {
    width: 1.35em;
    height: 1.35em;
    border-radius: 1em;
    background: var(--color-twitch-purple-10);
    border: none;
}
input[type='range']::-moz-range-track {
    height: 0.15em;
    border-radius: var(--border-radius-large);
    background: linear-gradient(var(--color-twitch-purple-10), var(--color-twitch-purple-10)) 0/var(--sx) 100% no-repeat, var(--color-background-range);
}



select {
    font-family: inherit;
    appearance: none;
    background-clip: padding-box;
    line-height: 1.5;
    transition: border var(--timing-short) ease-in, background-color var(--timing-short) ease-in;
    border-style: solid;
    border-width: var(--border-width-input);
    border-color: var(--color-border-input);
    color: var(--color-text-input);
    background-color: var(--color-background-input);
    background-repeat: no-repeat;
    background-position: right 0.0rem center;
    background-size: 2rem;
    cursor: pointer;
    line-height: normal;
    background-image: url('data:image/svg+xml,%3Csvg%20viewBox%3D%220%200%2020%2020%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%3Cpath%20fill%3D%22%23efeff1%22%20d%3D%22M10.5%2013.683l2.85-2.442%201.3%201.518-3.337%202.86a1.25%201.25%200%200%201-1.626%200l-3.338-2.86%201.302-1.518%202.849%202.442zm0-7.366L7.65%208.76l-1.3-1.518%203.337-2.86a1.25%201.25%200%200%201%201.627%200l3.337%202.86-1.302%201.518L10.5%206.317z%22%20%2F%3E%0A%3C%2Fsvg%3E');
    display: block !important;
    border-radius: 0.4rem !important;
    font-size: var(--font-size-6) !important;
    width: 100%;
    height: 30px;
    padding-left: 5px;
}
select:hover {
    outline: currentcolor none medium;
    border-color: var(--color-border-input-hover);
    background-color: var(--color-background-input);
}
select:focus,
select:focus option {
    border-color: var(--color-border-input-focus);
    background-color: var(--color-background-input-focus);
}

.saturation,
.brightness {
    pointer-events: none;
    width: var(--picker-width);
    height: var(--picker-height);
}
.color-picker {
    --hue: 0;
    background-color: hsl(var(--hue), 100%, 50%);
    position: relative;
    width: var(--picker-width);
    height: var(--picker-height);
    cursor: pointer;
}
.saturation {
    background-image: linear-gradient(to bottom, transparent, #000);
    position: absolute;
}
.brightness {
    background-image: linear-gradient(to right, #FFF, transparent);
    position: absolute;
}
.color-slider {
    --height: 20;
    height: calc(var(--height) * 1px);
    width: var(--picker-width);
    background: linear-gradient(90deg, #f00 0, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00);
    border-radius: 2px;
    position: relative;
    cursor: col-resize;
}
.color-picker-slider-cursor {
    position: absolute;
    z-index: 1;
    box-sizing: border-box;
    transform: translate(-50%, calc(var(--interval) * -1px / 2));
    border-left: calc(var(--arrow) * 1px - var(--base) * 1px) solid #fff0;
    border-right: calc(var(--arrow) * 1px - var(--base) * 1px) solid #fff0;
    border-top: calc(var(--arrow) * 1px) solid #FFF;
    border-bottom: calc(var(--arrow) * 1px) solid #FFF;
    pointer-events: none;
    width: 8px;
    height: calc(var(--height) * 1px + var(--interval) * 1px);
    border-radius: 10%;
    --arrow: 12;
    --interval: 16;
    --base: 5;
}
.color-picker-cursor {
    position: absolute;
    z-index: 1;
    box-sizing: border-box;
    transform: translate(-50%,-50%);
    border: 3px solid #fff;
    box-shadow: 2px 2px 2px rgba(0,0,0,.2);
    pointer-events: none;
    width: 15px;
    height: 15px;
    border-radius: 50%;
}

.color-picker-input {
    border-radius: 0.4rem;
    padding: 0.5rem 1rem;
    font-family: inherit;
    appearance: none;
    background-clip: padding-box;
    line-height: 1.5;
    transition: border var(--timing-short) ease-in,background-color var(--timing-short) ease-in;
    border-style: solid;
    border-width: var(--border-width-input-none);
    border-color: transparent;
    box-shadow: inset 0 0 0 var(--border-width-input-small) var(--color-border-input);
    color: var(--color-text-input);
    background-color: var(--color-background-input);
    display: inline-flex;
    height: var(--input-size-default);
    font-size: var(--input-text-default);
    width: 8.5rem;
    text-transform: uppercase;
    outline: none;
}

.color-picker-input:hover {
    outline: none;
    border-color: var(--color-border-input-hover);
    box-shadow: inset 0 0 0 var(--border-width-input) var(--color-border-input-hover);
    background-color: var(--color-background-input);
}
.color-picker.input-:focus, .color-picker-input:focus:hover {
    outline: solid 2px var(--color-border-input-focus);
    outline-offset: -1px;
    border-color: var(--color-border-input-focus);
    box-shadow: 0 0 0 var(--border-width-input) var(--color-border-input-focus),inset 0 0 0 var(--border-width-input) var(--color-border-input-focus);
    background-color: var(--color-background-input-focus);
    box-shadow: 0 0 0 var(--border-width-input) var(--color-border-input-focus),inset 0 0 0 var(--border-width-input) var(--color-border-input-focus);
    outline: 0px;
}

.confirm-button {
    background-color: var(--color-background-button-success);
    color: transparent;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='2rem' height='2rem' viewBox='0 0 20 20'%3E%3Cpath d='m4 10 5 5 8-8-1.5-1.5L9 12 5.5 8.5 4 10z'%3E%3C/path%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
}

.confirm-button:hover {
    background-color: var(--color-background-button-success-hover);
    color: transparent;
}

.confirm-button:active {
    background-color: var(--color-background-button-success-active);
    color: transparent;
}

#input-color-text {
    visibility: hidden;
    opacity: 0;
    position: relative;
    z-index: 1;
}
#option-color-text:checked ~ #dialog-color-picker,
#option-color-background:checked ~ #dialog-color-picker,
#option-color-text-hover:checked ~ #dialog-color-picker,
#option-color-background-hover:checked ~ #dialog-color-picker,
#option-color-text-selected:checked ~ #dialog-color-picker,
#option-color-background-selected:checked ~ #dialog-color-picker {
    visibility: visible;
    transform: translateY(0);
    transition: all 0.25s cubic-bezier(.17, .84, .44, 1);
    opacity: 1;
}
#dialog-color-picker {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    visibility: hidden;
    background: #18181B;
    border: 0px;
    border-radius: 6px;
    height: 520px;
    width: 324px;
    top: 50px;
    left: 3px;
    padding: 12px;
    z-index: 2;
    transition: all 0.25s cubic-bezier(.17, .84, .44, 1);
    opacity: 0;
    transform: translateY(30%);
}
#dialog-title {
    font-size: 2rem;
    text-align: center;
    color: var(--color-text-base);
    width: 74%;
}
#picked-color {
    --size: 30px;
    height: var(--size);
    width: var(--size);
    background-color: red;
    display: inline-block;
    border-radius: var(--border-radius-medium);
}
.dialog-controls {
    display: flex;
    column-gap: 10px;
}
.x-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    user-select: none;
    border-radius: var(--border-radius-medium);
    height: var(--button-size-default);
    width: var(--button-size-default);
    background-color: var(--color-background-button-text-default);
    color: var(--color-fill-button-icon);
    position: absolute;
    vertical-align: middle;
    overflow: hidden;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='2rem' height='2rem' viewBox='0 0 20 20'%3E%3Cg fill='%23efeff1'%3E%3Cpath d='M8.5 10 4 5.5 5.5 4 10 8.5 14.5 4 16 5.5 11.5 10l4.5 4.5-1.5 1.5-4.5-4.5L5.5 16 4 14.5 8.5 10z'%3E%3C/path%3E%3C/g%3E%3C/svg%3E");
    top: 10px;
    right: 10px;
}
.x-button:hover {
    background-color: var(--color-background-button-text-hover);
    color: var(--color-fill-button-icon-hover);
}
.x-button:active {
    background-color: var(--color-background-button-text-active);
    color: var(--color-fill-button-icon-active);
}

.no-transition {
    transition: none !important;
}
